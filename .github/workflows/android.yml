name: Test, Build and Release APK
permissions:
  contents: write

on:
  push:
    branches:
      - releases
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract version from pubspec
      - name: Extract version
        id: extract_version
        run: |
          version=$(chmod +x musily_metadata.sh && ./musily_metadata.sh --version)
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

      # Extract description from CHANGELOG.md
      - name: Extract description
        id: extract_description
        run: |
          description=$(chmod +x musily_metadata.sh && ./musily_metadata.sh --description)
          # Escape special characters for GitHub Actions output
          description="${description//'%'/'%25'}"
          description="${description//$'\n'/'%0A'}"
          description="${description//$'\r'/'%0D'}"
          echo "description=${description}" >> $GITHUB_ENV
          echo "description=${description}" >> $GITHUB_OUTPUT

      # Set up Java environment
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17.x"

      # Gradle cache for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up Flutter environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.22.3

      # Create key.properties file
      - name: Create key.properties
        run: echo "${{ secrets.KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties

      # Create key.jks file
      - name: Create key.jks
        run: echo "${{ secrets.KEY_STORE_BASE64 }}" | base64 --decode > android/app/key.jks

      # Get Flutter dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Analyze Dart code
      # - name: Analyze Dart code
      #   run: flutter analyze .

      # Build universal APK
      - name: Build universal APK
        run: flutter build apk --release --flavor stable

      # Release universal generated APK
      - name: Release universal APK
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: MusilyApp/musily
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/flutter-apk/app-stable-release.apk
          asset_name: musily-${{ steps.extract_version.outputs.version }}.apk
          tag: ${{ steps.extract_version.outputs.version }}
          body: "${{ steps.extract_description.outputs.description }}"
          prerelease: false
          overwrite: true

      # Get the latest release download URL
      - name: Get Latest Release URL
        id: get_release_url
        run: |
          release_url=$(curl -s https://api.github.com/repos/MusilyApp/musily/releases/latest | jq -r '.assets[0].browser_download_url')
          echo "release_url=${release_url}" >> $GITHUB_ENV
          echo "release_url=${release_url}" >> $GITHUB_OUTPUT

      # Post on Telegram
      - name: Post on Telegram
        run: |
          TELEGRAM_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          CHAT_ID="${{ secrets.TELEGRAM_CHAT_ID }}"

          # Format the Telegram message
          MESSAGE="Version: ${{ steps.extract_version.outputs.version }}\n\n${{ steps.extract_description.outputs.description }}"

          # Send message with download button
          curl -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
               -d "chat_id=$CHAT_ID" \
               -d "text=$MESSAGE" \
               -d "parse_mode=Markdown" \
               -d "reply_markup={\"inline_keyboard\":[[{\"text\":\"Download APK\",\"url\":\"${{ steps.get_release_url.outputs.release_url }}\"}]]}"
