name: Build and Release Flutter App

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      description: ${{ steps.extract_description.outputs.description }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: extract_version
        run: |
          version=$(chmod +x musily_metadata.sh && ./musily_metadata.sh --version)
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Extract description
        id: extract_description
        run: |
          description=$(chmod +x musily_metadata.sh && ./musily_metadata.sh --description)
          escaped_description="${description//'%'/'%25'}"
          escaped_description="${escaped_description//$'\n'/'%0A'}"
          escaped_description="${escaped_description//$'\r'/'%0D'}"
          echo "description=${escaped_description}" >> $GITHUB_OUTPUT

  build:
    needs: metadata
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    env:
      BUILD_DIR_LINUX: build/linux/x64/release/bundle
      ARCHIVE_NAME_LINUX: musily-linux-x64.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.29.3"

      - name: Install dependencies
        run: flutter pub get

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl git unzip xz-utils zip \
            clang cmake ninja-build pkg-config \
            libgtk-3-dev liblzma-dev libglu1-mesa \
            libstdc++-12-dev libmpv-dev \
            libjsoncpp-dev libsecret-1-dev

      - name: Build APK (Android)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "${{ secrets.KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties
          echo "${{ secrets.KEY_STORE_BASE64 }}" | base64 --decode > android/app/key.jks
          flutter build apk --release --flavor stable

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          flutter build linux --release
          tar -czvf ${{ env.ARCHIVE_NAME_LINUX }} -C ${{ env.BUILD_DIR_LINUX }} .

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: flutter build windows --release

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: flutter build macos --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Flutter-Build-${{ matrix.os }}
          path: |
            build/**/release/**/*
            *.tar.gz
            build/app/outputs/flutter-apk/*.apk

  release:
    needs: [metadata, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          tag_name: ${{ needs.metadata.outputs.version }}
          name: Release ${{ needs.metadata.outputs.version }}
          body: "${{ needs.metadata.outputs.description }}"
          files: |
            dist/**/*
